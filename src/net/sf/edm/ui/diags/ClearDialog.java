/*
 * ClearDialog.java
 *
 * Created on September 24, 2008, 7:58 PM
 */
package net.sf.edm.ui.diags;

import java.awt.Toolkit;
import java.util.ArrayList;
import net.sf.edm.DownloadState;
import net.sf.edm.HTTPDownload;
import net.sf.edm.ui.EDM;

/**
 *
 * @author  usien
 */
public class ClearDialog extends javax.swing.JDialog {

    /** Creates new form ClearDialog */
    public ClearDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        app = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comp = new javax.swing.JCheckBox();
        err = new javax.swing.JCheckBox();
        clrComp = new javax.swing.JCheckBox();
        clrErr = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Options");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/net/sf/edm/ui/icons/view_remove1.png")));

        app.setText("Apply");
        app.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appActionPerformed(evt);
            }
        });
        jPanel2.add(app);

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel1.setText("Would you like to:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 10);
        jPanel1.add(jLabel1, gridBagConstraints);

        comp.setFont(comp.getFont().deriveFont(comp.getFont().getStyle() & ~java.awt.Font.BOLD));
        comp.setText("Delete completed files");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 10);
        jPanel1.add(comp, gridBagConstraints);

        err.setFont(err.getFont().deriveFont(err.getFont().getStyle() & ~java.awt.Font.BOLD));
        err.setSelected(true);
        err.setText("Delete error files");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 10);
        jPanel1.add(err, gridBagConstraints);

        clrComp.setFont(clrComp.getFont().deriveFont(clrComp.getFont().getStyle() & ~java.awt.Font.BOLD));
        clrComp.setSelected(true);
        clrComp.setText("Clear completed downloads");
        clrComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrCompActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 10);
        jPanel1.add(clrComp, gridBagConstraints);

        clrErr.setFont(clrErr.getFont().deriveFont(clrErr.getFont().getStyle() & ~java.awt.Font.BOLD));
        clrErr.setSelected(true);
        clrErr.setText("Clear error downloads");
        clrErr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrErrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanel1.add(clrErr, gridBagConstraints);

        jPanel3.add(jPanel1, java.awt.BorderLayout.WEST);

        getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-183)/2, (screenSize.height-256)/2, 183, 256);
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    dispose();
}//GEN-LAST:event_jButton1ActionPerformed

private void appActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appActionPerformed
    ArrayList<HTTPDownload> downloads = EDM.mdl.getDownloads();
    HTTPDownload download;
    int counter = 0;

    while (counter < downloads.size()) {
        download = EDM.mdl.getDownload(counter);
        System.out.println("dnlds: " + downloads.size() + " , " + counter);

        if (clrComp.isSelected() || clrErr.isSelected()) {
            if (clrComp.isSelected() && download.getState() == DownloadState.COMPLETE) {
                EDM.mdl.cancelAction(counter, comp.isSelected());
            } else if (clrErr.isSelected() && download.getState() == DownloadState.EXCEPTION) {
                EDM.mdl.cancelAction(counter, err.isSelected());
            } else {
                counter++;
            }
        }
    }

    dispose();
}//GEN-LAST:event_appActionPerformed

private void clrCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrCompActionPerformed
    if (clrComp.isSelected()) {
        comp.setEnabled(true);
        app.setEnabled(true);
    } else {
        comp.setEnabled(false);

        if (!clrErr.isSelected()) {
            app.setEnabled(false);
        }
    }
}//GEN-LAST:event_clrCompActionPerformed

private void clrErrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrErrActionPerformed
    if (clrErr.isSelected()) {
        err.setEnabled(true);
        app.setEnabled(true);
    } else {
        err.setEnabled(false);

        if (!clrComp.isSelected()) {
            app.setEnabled(false);
        }
    }
}//GEN-LAST:event_clrErrActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton app;
    private javax.swing.JCheckBox clrComp;
    private javax.swing.JCheckBox clrErr;
    private javax.swing.JCheckBox comp;
    private javax.swing.JCheckBox err;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
